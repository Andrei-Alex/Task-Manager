name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Run-Test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      id: filter
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        filters: |
          backend:
            - 'server/**'
          frontend:
            - 'client/**'
    - name: Install
    - run: npm ci
    - run: npm run build --if-present
    # run only if 'backend' files were changed
    - name: backend tests
      if: steps.filter.outputs.server == 'true'
    - run: npm run backend-test
    - run: npm run backend-test:e2e
    # run only if 'frontend' files were changed
    - name: frontend tests
      if: steps.filter.outputs.client == 'true'
      run:  npm run front-end-test

    
  Run-Lint:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run lint
