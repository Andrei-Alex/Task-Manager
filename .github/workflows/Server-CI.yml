name: Server CI

on:
  push:
    paths:
      - packages/server/**

env:
  PORT: 3333
  ALLOWED_ORIGIN_CLIENT: http://localhost:3000
  ALLOWED_ORIGIN_Server: http://localhost:3333
  DB_HOST: postgres
  DB_PORT: 5432
  DB_PASSWORD: postgres
  DB_DATABASE: postgres
  DB_USER: postgres
  SECRET_KEY: SECRET
  BCRYPT_ROUNDS: 10

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          PORT: 3333
          ALLOWED_ORIGIN_CLIENT: http://localhost:3000
          ALLOWED_ORIGIN_Server: http://localhost:3333
          DB_HOST: postgres
          DB_PORT: 5432
          DB_PASSWORD: postgres
          DB_DATABASE: postgres
          DB_USER: postgres
          SECRET_KEY: SECRET
          BCRYPT_ROUNDS: 10
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
    - name: Install dependencies
      run: yarn ci

    - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
      run: node client.js
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
      env:
          # The hostname used to communicate with the PostgreSQL service container
        HOST: postgres
          # The default PostgreSQL port
        PORT: 5432
    
    
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

    - run: yarn

  Run-Lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: yarn
      - run: npx lerna run build --scope=server
      - run: npx lerna run lint --scope=server

  Run-Test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x, 18.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: yarn
      - run: npx lerna run build --scope=server
      - run: npx lerna run run-migration
      - run: npx lerna run test --scope=server
